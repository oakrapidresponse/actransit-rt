---
name: CLI

on:
  workflow_dispatch:
    inputs:
      command:
        description: 'Command to run'
        required: true
        type: string

jobs:
  deploy:
    name: CLI
    runs-on: ubuntu-22.04
    permissions:
      contents: 'read'
      id-token: 'write'
    environment: dev

    steps:
    - uses: 'actions/checkout@v4'

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        version: '>= 390.0.0'

    - name: get python version
      run: |
        python_version=$(cat .python-version)
        echo "python_version=${python_version}" >> $GITHUB_ENV

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.python_version }}

    - name: setup poetry
      run: |
        curl -sSL https://install.python-poetry.org | python -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
        poetry self add poetry-plugin-export

    - name: load poetry install from cache
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: install dependancies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry env use "$(cat .python-version)"
        poetry install

    - name: 'Run'
      run: |
        poetry run actransit-rt ${{ inputs.command }}

    - uses: actions/upload-artifact@v4
      if: ${{ hashFiles('out/') != '' }}
      with:
        name: Output
        path: out
